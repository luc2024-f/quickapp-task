<template>
  <!-- template里只能有一个根节点 -->
  <div class="wrapper">
    <canvas id="canvas" style="background-color:white;"></canvas>
  </div>
</template>

<script>


export default {

  onInit() {
    this.$page.setTitleBar({ text: 'Clock' });
  },

  onShow() {
    // 获取画布元素
    var canvas = document.getElementById("canvas");
    // 获取2D上下文
    var ctx = canvas.getContext("2d");
    // 获取屏幕宽度和高度
    let width = window.screen.width;
    let height = window.screen.height;
    // 设定时钟半径
    var radius = 300;
    // 将原点移动到画布中心
    ctx.translate(width / 2, height / 2);


    // 每秒执行一次drawClock函数
    setInterval(drawClock, 1000);

    // 绘制时钟
    function drawClock() {
      drawFace(ctx, radius);
      drawNumbers(ctx, radius);
      drawTime(ctx, radius);
    }

    // 绘制时钟表盘
    function drawFace(ctx, radius) {
      var grad;
      ctx.beginPath();
      ctx.arc(0, 0, radius, 0, 2 * Math.PI);
      ctx.fillStyle = 'white';
      ctx.fill();
      grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
      grad.addColorStop(0, 'black');


      ctx.strokeStyle = grad;
      ctx.lineWidth = radius * 0.05;
      ctx.stroke();
      ctx.beginPath();
      ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
      ctx.fillStyle = 'black';
      ctx.fill();
    }

    // 绘制时钟数字
    function drawNumbers(ctx, radius) {
      var ang;
      var num;
      ctx.font = radius * 0.15 + "px arial";
      ctx.textBaseline = "middle";
      ctx.textAlign = "center";
      for (num = 1; num < 13; num++) {
        ang = num * Math.PI / 6;
        ctx.rotate(ang);
        ctx.translate(0, -radius * 0.85);
        ctx.rotate(-ang);
        ctx.fillText(num.toString(), 0, 0);
        ctx.rotate(ang);
        ctx.translate(0, radius * 0.85);
        ctx.rotate(-ang);
      }
    }

    // 绘制时钟指针
    function drawTime(ctx, radius) {
      var now = new Date();
      var hour = now.getHours();
      var minute = now.getMinutes();
      var second = now.getSeconds();
      
      hour = hour%12;
      hour = (hour * Math.PI / 6) + (minute * Math.PI / (6 * 60)) + (second * Math.PI / (360 * 60));
      drawHand(ctx, hour, radius*0.5, radius*0.07, "#c88d8d");
      
      minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
      drawHand(ctx, minute, radius * 0.7, radius * 0.05, "#8dc88d");
      
      second = (second * Math.PI / 30);
      drawHand(ctx, second, radius * 0.85, radius * 0.02, "#8d8dc8");
    }
    // 绘制时钟指针的具体实现
    function drawHand(ctx, pos, length, width, color) {
      ctx.strokeStyle = color;
      ctx.beginPath();
      ctx.lineWidth = width;
      ctx.lineCap = "round";
      ctx.moveTo(0, 0);
      ctx.rotate(pos);
      ctx.lineTo(0, -length);
      ctx.stroke();
      ctx.rotate(-pos);

    }
  },
 
}
</script>

<style lang="less">
</style>
